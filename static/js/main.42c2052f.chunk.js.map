{"version":3,"sources":["materials.js","compositions/NonBranchingLine.js","compositions/BranchingLine.js","compositions/TextFromFont.js","compositions/TextInQuickSuccession.js","hooks/useInterval.js","compositions/OrbitControls.js","compositions/Background.js","compositions/TrackballControls.js","scenes/Tree.js","index.js","App.js"],"names":["wireframe","MeshBasicMaterial","color","opacity","basicBlack","MeshNormalMaterial","flatShading","MeshPhongMaterial","shininess","specular","MeshStandardMaterial","metalness","roughness","basicGray","NonBranchingLine","_ref","position","material","_ref$catmullRom","catmullRom","_ref$vertices","vertices","length","points","curve","CatmullRomCurve3","undefined","arcLengthDivisions","console","log","getPoints","geometry","Geometry","forEach","vertice","push","react_default","a","createElement","getRandomVertices","_ref$length","_ref$stepSize","stepSize","_ref$branchProbabilit","branchProbability","_ref$maxDepth","maxDepth","_ref$depthAlongTree","depthAlongTree","_ref$depthAlongBranch","depthAlongBranch","_ref$stepSizeDecay","stepSizeDecay","_ref$branchProbabilit2","branchProbabilityDecay","arguments","start","Vector3","verts","Array","from","reduce","previous","x","i","nextVertex","clone","add","Math","random","normalize","multiplyScalar","getRandomNonBranchingVertices","line","potentiallyBranchingVertex","branchAmount","concat","Object","toConsumableArray","map","round","max","BranchingLine","_ref2","_ref2$depthAlongTree","_ref2$Vertex","Vertex","_ref3","materials","attach","args","filter","vertex","isArray","groups","lastVertexOnMainBranch","key","all","fontRegistry","Text","rotation","onClick","_ref$material","_ref$font","font","text","_ref$size","size","_ref$height","height","_ref$curveSegments","curveSegments","textGeometryProps","objectWithoutProperties","_useState","useState","_useState2","slicedToArray","textGeometry","setTextGeometry","setText","fontInstance","TextGeometry","objectSpread","useEffect","FontLoader","load","texts","_ref$interval","interval","textFromFontProps","index","setIndex","callback","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","assign","OrbitControlsComponent","_ref$target","target","_ref$damping","damping","_ref$minAzimuthAngle","minAzimuthAngle","Infinity","_ref$maxAzimuthAngle","maxAzimuthAngle","_ref$autoRotateSpeed","autoRotateSpeed","_ref$enablePan","enablePan","_ref$enableRotate","enableRotate","_ref$enableZoom","enableZoom","_ref$zoomSpeed","zoomSpeed","_useThree","useThree","canvas","camera","controls","useMemo","ThreeOrbitControls","dispose","autoRotate","update","useRender","_ref$color","scene","gl","setPixelRatio","window","devicePixelRatio","background","Color","_ref$panSpeed","panSpeed","_ref$rotateSpeed","rotateSpeed","render","ThreeTrackballControls","noZoom","noPan","staticMoving","dynamicDampingFactor","keys","subjects","toLowerCase","roles","Tree","PerspectiveCamera","innerWidth","innerHeight","set","lookAt","dist","TrackballControls_OrbitControlsComponent","Background_OrbitControlsComponent","TextInQuickSuccession_Text","floor","join","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.42c2052f.chunk.js","sourcesContent":["import {\r\n\tMeshBasicMaterial,\r\n\tMeshStandardMaterial,\r\n\tMeshNormalMaterial,\r\n\tSphericalReflectionMapping,\r\n\tMeshPhongMaterial,\r\n\tMeshToonMaterial,\r\n\tDoubleSide\r\n} from 'three';\r\n\r\nconst globalFlatShading = false,\r\n\tglobalWireframe = false;\r\n\r\nexport const wireframe = new MeshBasicMaterial({\r\n\twireframe: true,\r\n\tcolor: 0,\r\n\topacity: 0.5\r\n});\r\n\r\nexport const normal = new MeshNormalMaterial({\r\n\tflatShading: globalFlatShading,\r\n\twireframe: globalWireframe\r\n});\r\n\r\nexport const whiteMaterial = new MeshPhongMaterial({\r\n\tcolor: 0xeeeeee,\r\n\tflatShading: globalFlatShading,\r\n\tshininess: 230,\r\n\t// side: DoubleSide,\r\n\twireframe: globalWireframe\r\n});\r\n\r\nexport const softMaterial = new MeshPhongMaterial({\r\n\tcolor: 0xaaaaaa,\r\n\tflatShading: globalFlatShading,\r\n\tshininess: 0,\r\n\t// side: DoubleSide,\r\n\twireframe: globalWireframe\r\n});\r\n\r\nexport const demoMaterial = new MeshPhongMaterial({\r\n\tcolor: 'rgb(20, 20, 80)',\r\n\tflatShading: globalFlatShading,\r\n\tshininess: 130,\r\n\tspecular: 'yellow',\r\n\twireframe: globalWireframe,\r\n});\r\n\r\nexport const redMaterial = new MeshStandardMaterial({\r\n\tcolor: 0xff0000,\r\n\tflatShading: globalFlatShading,\r\n\tmetalness: 0.5,\r\n\troughness: 0.2,\r\n\twireframe: globalWireframe\r\n});\r\n\r\nexport const basicWhite = new MeshBasicMaterial({\r\n\tcolor: 0xffffff,\r\n\twireframe: true\r\n})\r\nexport const basicBlack = new MeshBasicMaterial({\r\n\tcolor: 0x000000\r\n})\r\nexport const basicGray = new MeshBasicMaterial({\r\n\tcolor: 0x000000,\r\n\topacity: 0.25\r\n})","import React from 'react';\r\n\r\nimport { Geometry, Vector3, CatmullRomCurve3 } from 'three';\r\n\r\nexport function getRandomVertices (\r\n\tlength = 10,\r\n\tstepSize = 3\r\n) {\r\n\tconst start = new Vector3(0, 0, 0);\r\n\tconst verts = [start];\r\n\tArray.from(new Array(length))\r\n\t\t.reduce((previous, x, i) => {\r\n\t\t\tconst nextVertex = previous.clone().add(new Vector3(\r\n\t\t\t\tMath.random() * 2 - 1,\r\n\t\t\t\tMath.random() * 2 - 1,\r\n\t\t\t\tMath.random() * 2 - 1\r\n\t\t\t).normalize().multiplyScalar(stepSize));\r\n\t\t\tverts.push(nextVertex);\r\n\t\t\treturn nextVertex;\r\n\t\t}, start);\r\n\treturn verts;\r\n}\r\n\r\nexport default function NonBranchingLine ({\r\n\tposition,\r\n\tmaterial,\r\n\tcatmullRom = false,\r\n\tvertices = []\r\n}) {\r\n\r\n\tif (vertices.length < 2) {\r\n\t\t// throw new Error(vertices.length + ' vertices is too few for a line');\r\n\t\t// whatever.\r\n\t\treturn null;\r\n\t}\r\n\r\n\tlet points = null;\r\n\tif (catmullRom) {\r\n\t\tvar curve = new CatmullRomCurve3(vertices, false, undefined, 30);\r\n\t\tcurve.arcLengthDivisions = 10;\r\n\t\tconsole.log(curve);\r\n\t\tpoints = curve.getPoints(1000);\r\n\t}\r\n\tconst geometry = new Geometry();\r\n\r\n\t(points || vertices).forEach(vertice => geometry.vertices.push(vertice));\r\n\r\n\treturn <group position={ position }>\r\n\t\t{/* <mesh>\r\n\t\t\t<sphereBufferGeometry args={[70, 90, 90]} attach='geometry' />\r\n\t\t\t<meshBasicMaterial wireframe color={0xeeeeee} attach='material' />\r\n\t\t</mesh> */}\r\n\t\t<line geometry={geometry} material={ material } />\r\n\t</group>;\r\n}","import React from 'react';\r\nimport * as materials from '../materials';\r\nimport NonBranchingLine, { getRandomVertices as getRandomNonBranchingVertices } from '../compositions/NonBranchingLine';\r\nimport { Geometry, Vector3 } from 'three';\r\nexport function getRandomVertices ({\r\n\tlength = 50,\r\n\tstepSize = 3,\r\n\tbranchProbability = 0.01,\r\n\tmaxDepth = 5,\r\n\tdepthAlongTree = 0,\r\n\tdepthAlongBranch = 0,\r\n\tstepSizeDecay = 0.5,\r\n\tbranchProbabilityDecay = 0.2\r\n}) {\r\n\tconsole.log('BranchingLine getRandomVertices', 'L:' + length, 'S:' + stepSize, 'p:' + branchProbability, 'D:' + depthAlongTree);\r\n\treturn getRandomNonBranchingVertices(length, stepSize)\r\n\t\t.reduce((line, potentiallyBranchingVertex, i) => {\r\n\t\t\tlet branchAmount = 0;\r\n\t\t\twhile (\r\n\t\t\t\tdepthAlongTree < maxDepth &&\r\n\t\t\t\tbranchAmount < 100 &&\r\n\t\t\t\tMath.random() <= branchProbability\r\n\t\t\t) {\r\n\t\t\t\tbranchAmount++;\r\n\t\t\t}\r\n\r\n\t\t\treturn [\r\n\t\t\t\t...line,\r\n\t\t\t\tpotentiallyBranchingVertex,\r\n\t\t\t\t...(Array.from(new Array(branchAmount))\r\n\t\t\t\t\t.map(() => getRandomVertices({\r\n\t\t\t\t\t\tlength: Math.round(Math.max(0, length - depthAlongBranch) * 0.5),\r\n\t\t\t\t\t\tstepSize: stepSize * stepSizeDecay,\r\n\t\t\t\t\t\tbranchProbability: branchProbability * branchProbabilityDecay,\r\n\t\t\t\t\t\tmaxDepth : maxDepth,\r\n\t\t\t\t\t\tdepthAlongTree: depthAlongTree + 1,\r\n\t\t\t\t\t\tdepthAlongBranch: depthAlongBranch,\r\n\t\t\t\t\t\tstepSizeDecay: stepSizeDecay,\r\n\t\t\t\t\t\tbranchProbabilityDecay: branchProbabilityDecay\r\n\t\t\t\t\t})))\r\n\t\t\t];\r\n\t\t}, []);\r\n}\r\n\r\nexport default function BranchingLine ({\r\n\tposition,\r\n\tmaterial,\r\n\tvertices,\r\n\tcatmullRom,\r\n\tdepthAlongTree = 0,\r\n\tVertex = ({ position, depthAlongBranch, depthAlongTree }) => <mesh position={position} material={materials.wireframe}>\r\n\t\t<tetrahedronBufferGeometry attach=\"geometry\" args={[0.05 + depthAlongTree * 0.3 + depthAlongBranch * 0.6]} />\r\n\t</mesh>\r\n}) {\r\n\tconst geometry = new Geometry();\r\n\tvertices\r\n\t\t.filter(vertex => !Array.isArray(vertex))\r\n\t\t.forEach(vertex => geometry.vertices.push(vertex));\r\n\r\n\tconst groups = [];\r\n\tvertices.reduce((lastVertexOnMainBranch, vertex, i) => {\r\n\t\tif (Array.isArray(vertex)) {\r\n\t\t\tgroups.push(<BranchingLine key={i} depthAlongTree={ depthAlongTree } vertices={ vertex } position={lastVertexOnMainBranch} material={material} Vertex={Vertex} />);\r\n\t\t\treturn lastVertexOnMainBranch;\r\n\t\t}\r\n\t\treturn vertex;\r\n\t});\r\n\r\n\r\n\treturn <group position={ position }>\r\n\t\t<NonBranchingLine catmullRom={ catmullRom } vertices={ vertices.filter(vertex => !Array.isArray(vertex)) } material={materials.basicGray} />\r\n\t\t{ vertices\r\n\t\t\t.filter(vertex => !Array.isArray(vertex))\r\n\t\t\t.map((vertex, i, all) => <Vertex key={i} position={vertex} depthAlongTree={ depthAlongTree } depthAlongBranch={i / all.length}/>)\r\n\t\t}\r\n\r\n\t\t{ groups }\r\n\t</group>;\r\n}","import React, { useEffect, useState } from 'react';\r\nimport {\r\n\tTextGeometry,\r\n\tFontLoader\r\n} from 'three';\r\n\r\nimport * as materials from '../materials';\r\n\r\nconst fontRegistry = {};\r\nexport default function Text({\r\n\tposition,\r\n\trotation,\r\n\tonClick,\r\n\tmaterial = materials.wireframe,\r\n\tfont = 'fonts/helvetiker_regular.typeface.json',\r\n\ttext,\r\n\tsize = 3,\r\n\theight = 0.2,\r\n\tcurveSegments = 6,\r\n\t...textGeometryProps\r\n}) {\r\n\tconst [textGeometry, setTextGeometry] = useState(null);\r\n\r\n\tfunction setText (font) {\r\n\t\tconst fontInstance = fontRegistry[font];\r\n\t\tsetTextGeometry(new TextGeometry(text, {\r\n\t\t\tfont: fontInstance,\r\n\t\t\tsize,\r\n\t\t\theight,\r\n\t\t\tcurveSegments,\r\n\t\t\t...textGeometryProps\r\n\t\t}));\r\n\t}\r\n\tuseEffect(() => fontRegistry[font] ? setText(font) : new FontLoader().load(font, (fontInstance) => {\r\n\t\tfontRegistry[font] = fontInstance;\r\n\t\tsetText(font);\r\n\t}), [font, text]);\r\n\r\n\treturn textGeometry ?\r\n\t\t<mesh position={position} rotation={rotation} material={ material } geometry={textGeometry} onClick={onClick} /> :\r\n\t\tnull;\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nimport useInterval from '../hooks/useInterval';\r\n\r\nimport TextFromFont from './TextFromFont';\r\n\r\nexport default function Text({\r\n\ttexts,\r\n\tinterval = 50,\r\n\t...textFromFontProps\r\n}) {\r\n\tconst [index, setIndex] = useState(0);\r\n\r\n\tuseInterval(() => setIndex((index + 1) % texts.length), interval);\r\n\r\n\treturn <TextFromFont {...textFromFontProps} text={texts[index]} />;\r\n}\r\n","import { useEffect, useRef } from 'react';\r\n\r\n// https://overreacted.io/making-setinterval-declarative-with-react-hooks/\r\nexport default function useInterval(callback, delay) {\r\n\tconst savedCallback = useRef();\r\n\r\n\t// Remember the latest callback.\r\n\tuseEffect(() => {\r\n\t  savedCallback.current = callback;\r\n\t}, [callback]);\r\n\r\n\t// Set up the interval.\r\n\tuseEffect(() => {\r\n\t  function tick() {\r\n\t\tsavedCallback.current();\r\n\t  }\r\n\t  if (delay !== null) {\r\n\t\tlet id = setInterval(tick, delay);\r\n\t\treturn () => clearInterval(id);\r\n\t  }\r\n\t}, [delay]);\r\n  }\r\n","import { useEffect, useMemo } from 'react';\r\nimport ThreeOrbitControls from 'three-orbitcontrols';\r\nimport { useThree, useRender } from 'react-three-fiber';\r\nimport { Vector3 } from 'three';\r\n\r\nexport default function OrbitControlsComponent({\r\n\ttarget = new Vector3(0, 0, 0),\r\n\tdamping = 0.2,\r\n\tminAzimuthAngle = -Infinity,\r\n\tmaxAzimuthAngle = Infinity,\r\n\tautoRotateSpeed = false,\r\n\tenablePan = true,\r\n\tenableRotate = true,\r\n\tenableZoom = true,\r\n\tzoomSpeed = 0.5\r\n}) {\r\n\tconst { canvas, camera } = useThree();\r\n\r\n\tconst controls = useMemo(\r\n\t\t() => {\r\n\t\t\tconst controls = new ThreeOrbitControls(camera, canvas);\r\n\r\n\t\t\treturn controls;\r\n\t\t},\r\n\t\t[ camera, canvas ]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\t// scene.background = new Color(0x000000);\r\n\t\t\treturn () => {\r\n\t\t\t\tcontrols.dispose();\r\n\t\t\t};\r\n\t\t},\r\n\t\t[ controls ]\r\n\t);\r\n\r\n\tcontrols.damping = damping;\r\n\tcontrols.minAzimuthAngle = minAzimuthAngle;\r\n\tcontrols.maxAzimuthAngle = maxAzimuthAngle;\r\n\tcontrols.enablePan = enablePan;\r\n\tcontrols.enableRotate = enableRotate;\r\n\tcontrols.enableZoom = enableZoom;\r\n\tcontrols.zoomSpeed = zoomSpeed;\r\n\r\n\t// controls.target = new Vector3(x,y,z)\r\n\r\n\tcontrols.autoRotate = !!autoRotateSpeed;\r\n\tcontrols.autoRotateSpeed = autoRotateSpeed;\r\n\r\n\tif (controls.target !== target) {\r\n\t\tcontrols.target = target;\r\n\t\tcontrols.update();\r\n\t}\r\n\r\n\tuseRender(() => {\r\n\t\tif (!controls) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!!autoRotateSpeed) {\r\n\t\t\tcontrols.update();\r\n\t\t}\r\n\t});\r\n\r\n\treturn null;\r\n}\r\n","import { useEffect } from 'react';\r\nimport {\r\n\tColor\r\n} from 'three';\r\nimport {\r\n\tuseThree,\r\n\tuseRender\r\n} from 'react-three-fiber';\r\n\r\n\r\nexport default function OrbitControlsComponent ({\r\n\tcolor = 0x000000\r\n}) {\r\n\tconst {\r\n\t\tscene,\r\n\t\tgl\r\n\t} = useThree();\r\n\r\n\tuseEffect(() => {\r\n\t\tgl.setPixelRatio(window.devicePixelRatio ? window.devicePixelRatio : 1);\r\n\t\tscene.background = new Color(color);\r\n\t}, [color]);\r\n\r\n\treturn null;\r\n}\r\n","import { useEffect } from 'react';\r\nimport ThreeTrackballControls from 'three-trackballcontrols';\r\nimport {\r\n\tuseThree,\r\n\tuseRender\r\n} from 'react-three-fiber';\r\n\r\n\r\nexport default function OrbitControlsComponent ({\r\n\tdamping = 0.2,\r\n\tzoomSpeed = 1.2,\r\n\tpanSpeed = 0.8,\r\n\trotateSpeed = 16\r\n}) {\r\n\tconst {\r\n\t\tcanvas,\r\n\t\tcamera,\r\n\t\trender\r\n\t} = useThree();\r\n\r\n\tlet controls = null;\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log('-- new ThreeTrackballControls');\r\n\t\tcontrols = new ThreeTrackballControls(camera, canvas);\r\n\r\n\t\tcontrols.rotateSpeed = rotateSpeed;\r\n\t\tcontrols.zoomSpeed = zoomSpeed;\r\n\t\tcontrols.panSpeed = panSpeed;\r\n\r\n\t\tcontrols.noZoom = !zoomSpeed;\r\n\t\tcontrols.noPan = !panSpeed;\r\n\r\n\t\tcontrols.staticMoving = true;\r\n\t\tcontrols.dynamicDampingFactor = damping;\r\n\r\n\t\tcontrols.keys = [\r\n\t\t\t65, // key A\r\n\t\t\t83, // key S\r\n\t\t\t68 // key D\r\n\t\t];\r\n\t\t// controls.addEventListener( 'change', render );\r\n\t\t// scene.background = new Color(0x000000);\r\n\r\n\t\treturn () => {\r\n\t\t\tconsole.log('-- dispose ThreeTrackballControls');\r\n\t\t\tcontrols.dispose();\r\n\t\t\tcontrols = null;\r\n\t\t}\r\n\t}, [camera, canvas]);\r\n\r\n\tuseRender(() => {\r\n\t\tif (!controls) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tcontrols.update();\r\n\t});\r\n\r\n\r\n\r\n\treturn null;\r\n}\r\n","import React, { useEffect, useMemo, useState } from 'react';\r\nimport {\r\n\tPerspectiveCamera,\r\n\tVector3,\r\n\tColor,\r\n\tSphereBufferGeometry,\r\n\tPlaneGeometry,\r\n\tMeshPhongMaterial,\r\n\tTextGeometry,\r\n\tFontLoader\r\n} from 'three';\r\nimport {\r\n\tCanvas,\r\n\tuseRender,\r\n\tuseThree\r\n} from 'react-three-fiber';\r\n\r\nimport * as materials from '../materials';\r\n\r\nimport NonBranchingLine, { getRandomVertices as x } from '../compositions/NonBranchingLine';\r\nimport BranchingLine, { getRandomVertices } from '../compositions/BranchingLine';\r\nimport TextFromFont from '../compositions/TextFromFont';\r\nimport TextInQuickSuccession from '../compositions/TextInQuickSuccession';\r\nimport OrbitControls from '../compositions/OrbitControls';\r\nimport Background from '../compositions/Background';\r\nimport TrackballControls from '../compositions/TrackballControls';\r\n\r\nconst subjects = [\r\n\t'web', 'responsive', 'interaction', 'tech', 'schema', 'nodejs', 'full-stack', 'intergalactic',\r\n\t'usability', 'experience', 'multi-disciplinary', 'open-source', 'frontend', 'art', 'devops', 'graphic',\r\n\t'software', 'creative', 'javascript', 'pixel', 'internet', 'communications', 'app', 'React', 'NodeJS', 'XML',\r\n\t'XQuery'\r\n].map(x => x.toLowerCase());\r\n\r\nconst roles = [\r\n\t'developer', 'designer', 'enthousiast', 'guru', 'ninja', 'wizard', 'harry', 'programmer', 'engineer',\r\n\t'professional', 'architect', 'evangelist', 'strategist', 'consultant', 'technician', 'master', 'hacker',\r\n\t'guy', 'person', 'buddy', 'pusher'\r\n];\r\n\r\n\r\nexport default function Tree () {\r\n\tconst camera = new PerspectiveCamera(\r\n\t\t70,\r\n\t\twindow.innerWidth / window.innerHeight,\r\n\t\t1,\r\n\t\t1000);\r\n\tcamera.position.set(16, -16, 60);\r\n\tcamera.lookAt(new Vector3(0, 0, 0));\r\n\r\n\treturn <Canvas camera={ camera }>\r\n\t\t<OrbitControls\r\n\t\t\tenablePan={false}\r\n\t\t\tenableRotate={false}\r\n\t\t\tenableZoom={false}\r\n\t\t\tautoRotateSpeed={ 0.2 }\r\n\t\t/>\r\n\t\t<TrackballControls panSpeed={0}/>\r\n\t\t<Background color={0xFCFCFC} />\r\n\r\n\t\t{ Array.from(new Array(5)).map((x, i) => <BranchingLine\r\n\t\t\tkey={i}\r\n\t\t\tvertices={getRandomVertices({\r\n\t\t\t\tlength: 30 + Math.round(100 * Math.random()),\r\n\t\t\t\tstepSize: 3 + 4 * Math.random(),\r\n\t\t\t\tmaxDepth: 10\r\n\t\t\t})}\r\n\t\t\tmaterial={materials.basicBlack}\r\n\t\t\t// Vertex={() => null}\r\n\t\t/>)}\r\n\r\n\t\t<group position={[-14, 0, 0]}>\r\n\t\t\t<TextFromFont text='wybe minnebo' material={ materials.basicBlack } position={[0, 0, 0]} />\r\n\t\t\t<TextInQuickSuccession\r\n\t\t\t\ttexts={Array.from(new Array(300)).map(() => [\r\n\t\t\t\t\tsubjects[Math.floor(Math.random() * subjects.length)],\r\n\t\t\t\t\troles[Math.floor(Math.random() * roles.length)],\r\n\t\t\t\t].join(' '))}\r\n\t\t\t\tmaterial={ materials.basicBlack }\r\n\t\t\t\tposition={[0, -2, 0]}\r\n\t\t\t\tsize={1}\r\n\t\t\t/>\r\n\t\t\t<TextFromFont\r\n\t\t\t\ttext={'and shenanigans'}\r\n\t\t\t\tmaterial={ materials.basicBlack }\r\n\t\t\t\tposition={[0, -4, 0]}\r\n\t\t\t\tsize={1}\r\n\t\t\t/>\r\n\t\t</group>\r\n\t</Canvas>;\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n// import registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// registerServiceWorker();\r\n","import React, { useState } from 'react';\r\nimport Tree from './scenes/Tree';\r\n\r\nexport default function App () {\r\n\treturn <Tree />\r\n}\r\n"],"sourceRoot":""}